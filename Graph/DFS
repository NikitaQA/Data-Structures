class Graph{
  private int v;
  private LinkedList <Integer> adj[];
  
  public Graph(int v){
    this.v = v;
    adj[] = new LinkedList[v];
    
    for(int i=0; i<v; i++){
      adj[i] = new LinkedList();
    }
  }
  
  public void addEdge(int v,int w)
    {
        adj[v].add(w);
    }
  
  public void dfs(){
    boolean visited[] = new boolean[v];
    for(int i=0; i<v; i++){
      if(visited[i]==false){
        dfsUtil(i,visited);
      }
    }
  }
  
  public void dfsUtil(int s, boolean visited[]){
    visited[s] = true;
    SOP(s);
    Iterator itr = adj[s].listIterator();
      while(itr.hasNext()){
        int x = itr.next();
        if(!visited[x]){
          dfsUtil(x,visited);
      }
    }
  }
  
  public static void main(String args[])
    {
        Graph g = new Graph(4);
        g.addEdge(0, 1);
        g.addEdge(0, 2);
        g.addEdge(1, 2);
        g.addEdge(2, 0);
        g.addEdge(2, 3);
        g.addEdge(3, 3);
        g.dfs();
    }
}
